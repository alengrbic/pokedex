{"version":3,"sources":["comps/PokeDetail.jsx","comps/App.jsx","index.jsx"],"names":["PokeDetail","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","props","image","alt","width","height","name","charAt","toUpperCase","slice","types","text","Component","P","Pokedex","App","_this","call","state","url","term","type","keypressed","event","handlePokedex","bind","assertThisInitialized","_handlePokedex","asyncToGenerator","regenerator_default","mark","_callee","response","response2","wrap","_context","prev","next","getPokemonByName","toLowerCase","sent","getPokemonSpeciesByName","console","log","setState","sprites","front_default","flavor_text_entries","flavor_text","alert","stop","_this2","style","styles","src_comps_PokeDetail","onChange","e","target","onKeyPress","onClick","ReactDOM","render","src_comps_App","document","querySelector"],"mappings":"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","file":"static/js/main.a893c197.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./PokeDetail.css\";\r\n\r\nexport class PokeDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"cont\">\r\n          <img src={this.props.image} alt=\"\" width=\"100px\" height=\"100px\" />\r\n        </div>\r\n        <div className=\"texts\">\r\n          <h2>\r\n            {this.props.name.charAt(0).toUpperCase() + this.props.name.slice(1)}\r\n          </h2>\r\n          <h3>{this.props.types.toUpperCase()}</h3>\r\n\r\n          <h4>{this.props.text}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokeDetail;\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"pokedex-promise-v2\";\r\nimport PokeDetail from \"./PokeDetail\";\r\nimport \"./App.css\";\r\nconst P = new Pokedex();\r\n\r\nexport class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handlePokedex = this.handlePokedex.bind(this);\r\n  }\r\n  state = {\r\n    name: \"\",\r\n    url: \"\",\r\n    term: \"\",\r\n    text: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  async handlePokedex() {\r\n    const response = await P.getPokemonByName(this.state.term.toLowerCase());\r\n    const response2 = await P.getPokemonSpeciesByName(\r\n      this.state.term.toLowerCase()\r\n    );\r\n    console.log(response);\r\n    if (this.state.term !== \"\") {\r\n      this.setState({ name: response.name });\r\n      this.setState({ url: response.sprites.front_default });\r\n      this.setState({ text: response2.flavor_text_entries[2].flavor_text });\r\n      this.setState({ type: response.types[0].type.name });\r\n    } else {\r\n      alert(\"Please enter a valid Pokemon name\");\r\n    }\r\n  }\r\n\r\n  keypressed = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.handlePokedex();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"containers\" style={this.styles}>\r\n          <PokeDetail\r\n            name={this.state.name}\r\n            image={this.state.url}\r\n            text={this.state.text}\r\n            types={this.state.type}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.term}\r\n            onChange={e => {\r\n              this.setState({ term: e.target.value });\r\n            }}\r\n            onKeyPress={this.keypressed}\r\n          />\r\n          <button className=\"btn\" onClick={this.handlePokedex} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./comps/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}