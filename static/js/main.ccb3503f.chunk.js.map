{"version":3,"sources":["comps/PokeDetail.jsx","comps/App.jsx","index.jsx"],"names":["PokeDetail","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","style","backgroundColor","minHeight","border","borderRadius","marginBottom","src","props","image","alt","width","height","className","name","charAt","toUpperCase","slice","types","text","Component","P","Pokedex","App","_this","call","state","url","term","type","keypressed","event","handlePokedex","styles","maxWidth","margin","marginTop","bind","assertThisInitialized","_handlePokedex","asyncToGenerator","regenerator_default","mark","_callee","response","response2","wrap","_context","prev","next","getPokemonByName","toLowerCase","sent","getPokemonSpeciesByName","console","log","setState","sprites","front_default","flavor_text_entries","flavor_text","alert","stop","_this2","src_comps_PokeDetail","onChange","e","target","onKeyPress","onClick","ReactDOM","render","src_comps_App","document","querySelector"],"mappings":"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","file":"static/js/main.ccb3503f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./PokeDetail.css\";\r\n\r\nexport class PokeDetail extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            minHeight: \"23vh\",\r\n            border: \"1px solid red\",\r\n            borderRadius: \"15px\",\r\n            marginBottom: \"1rem\"\r\n          }}\r\n        >\r\n          <img src={this.props.image} alt=\"\" width=\"px\" height=\"200px\" />\r\n        </div>\r\n        <div className=\"texts\">\r\n          <h2>\r\n            {this.props.name.charAt(0).toUpperCase() + this.props.name.slice(1)}\r\n          </h2>\r\n          <h3>{this.props.types.toUpperCase()}</h3>\r\n\r\n          <h4>{this.props.text}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokeDetail;\r\n","import React, { Component } from \"react\";\r\nimport Pokedex from \"pokedex-promise-v2\";\r\nimport PokeDetail from \"./PokeDetail\";\r\nimport \"./App.css\";\r\nconst P = new Pokedex();\r\n\r\nexport class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.handlePokedex = this.handlePokedex.bind(this);\r\n  }\r\n  state = {\r\n    name: \"\",\r\n    url: \"\",\r\n    term: \"\",\r\n    text: \"\",\r\n    type: \"\"\r\n  };\r\n\r\n  async handlePokedex() {\r\n    const response = await P.getPokemonByName(this.state.term.toLowerCase());\r\n    const response2 = await P.getPokemonSpeciesByName(\r\n      this.state.term.toLowerCase()\r\n    );\r\n    console.log(response);\r\n    if (this.state.term !== \"\") {\r\n      this.setState({ name: response.name });\r\n      this.setState({ url: response.sprites.front_default });\r\n      this.setState({ text: response2.flavor_text_entries[2].flavor_text });\r\n      this.setState({ type: response.types[0].type.name });\r\n    } else {\r\n      alert(\"Please enter a valid Pokemon name\");\r\n    }\r\n  }\r\n\r\n  keypressed = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.handlePokedex();\r\n    }\r\n  };\r\n\r\n  styles = {\r\n    border: \"2rem solid red\",\r\n    borderRadius: \"15px\",\r\n    minHeight: \"50vh\",\r\n    maxWidth: \"50vw\",\r\n    margin: \"auto\",\r\n    marginTop: \"1rem\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div style={this.styles}>\r\n          <PokeDetail\r\n            name={this.state.name}\r\n            image={this.state.url}\r\n            text={this.state.text}\r\n            types={this.state.type}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.term}\r\n            onChange={e => {\r\n              this.setState({ term: e.target.value });\r\n            }}\r\n            onKeyPress={this.keypressed}\r\n          />\r\n          <button className=\"btn\" onClick={this.handlePokedex} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./comps/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}